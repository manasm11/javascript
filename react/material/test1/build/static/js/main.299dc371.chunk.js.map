{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","background","color","theme","createMuiTheme","typography","h2","fontSize","marginBottom","palette","primary","main","orange","secondary","green","CheckboxExample","React","useState","checked","setChecked","FormControlLabel","control","Checkbox","checkedIcon","onChange","e","target","label","StyledButton","children","styles","Button","className","App","ThemeProvider","AppBar","style","height","Toolbar","IconButton","Typography","Container","maxWidth","variant","component","Grid","container","spacing","justify","item","xs","sm","Paper","width","TextField","type","placeholder","ButtonGroup","startIcon","size","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,iC,8OC0BnCA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,WAAY,2CACZC,MAAO,WAILC,EAAQC,YAAe,CAC3BC,WAAY,CACVC,GAAI,CACFC,SAAU,GACVC,aAAc,KAGlBC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAM,SAKlB,SAASC,IAAmB,IAAD,EACKC,IAAMC,UAAS,GADpB,mBAClBC,EADkB,KACTC,EADS,KAEzB,OACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CAGEJ,QAASA,EACTK,YAAa,cAAC,IAAD,IACbC,SAAU,SAACC,GAAD,OAAON,EAAWM,EAAEC,OAAOR,YAKzCS,MAAM,qBAIZ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBC,EAAShC,IACf,OACE,cAACiC,EAAA,EAAD,CAAQC,UAAWF,EAAO9B,KAA1B,SACI6B,IAyFOI,MApFf,WACE,OACE,eAACC,EAAA,EAAD,CAAe/B,MAAOA,EAAtB,UACE,cAACgC,EAAA,EAAD,CAAQC,MAAO,CAACC,OAAO,IAAvB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,yBAKJ,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACQ,EAAA,EAAD,CAAYG,QAAQ,KAAKC,UAAU,MAAnC,mBAGA,cAAChB,EAAD,oBAIA,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAApC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAACC,EAAA,EAAD,CAAOhB,MAAO,CAACC,OAAO,IAAKgB,MAAM,YAEnC,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAOhB,MAAO,CAACC,OAAO,IAAKgB,MAAM,YAEnC,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAOhB,MAAO,CAACC,OAAO,IAAKgB,MAAM,eAIrC,cAACC,EAAA,EAAD,CACEX,QAAQ,WAERzC,MAAM,YACNqD,KAAK,QAGL5B,MAAM,WAEN6B,YAAY,mBAEd,cAACzC,EAAD,IACA,eAAC0C,EAAA,EAAD,WACE,cAAC1B,EAAA,EAAD,CACE2B,UAAW,cAAC,IAAD,IAEXC,KAAK,QAELvB,MAAO,CACL7B,SAAU,IAEZoC,QAAQ,YACRzC,MAAM,UATR,kBAaA,cAAC6B,EAAA,EAAD,CACE2B,UAAW,cAAC,IAAD,IAEXC,KAAK,QAELvB,MAAO,CACL7B,SAAU,IAEZoC,QAAQ,YACRzC,MAAM,YATR,uBAeF,qBAAK0D,IAAKC,EAAM7B,UAAU,WAAW8B,IAAI,oBC9ItCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.299dc371.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport DoneIcon from '@material-ui/icons/Done';\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { orange, green } from '@material-ui/core/colors'\n\nimport '@fontsource/roboto' // To add custom fonts\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu'\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B, #FF8E53)',\n    color: 'white'\n  }\n})\n\nconst theme = createMuiTheme({\n  typography: {\n    h2: {\n      fontSize: 36,\n      marginBottom: 15\n    }\n  },\n  palette: {\n    primary: {\n      main: orange[500]\n    },\n    secondary: {\n      main: green[500]\n    }\n  }\n})\n\nfunction CheckboxExample() {\n  const [checked, setChecked] = React.useState(true)\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          // color='primary'\n          // disabled\n          checked={checked}\n          checkedIcon={<DoneIcon />}\n          onChange={(e) => setChecked(e.target.checked)} />\n        // inputProps={\n        //   'aria-label': 'secondary checkbox'\n        // } // Pata ni isse kya hua ???\n      }\n      label='Testing Checkbox' />\n  )\n}\n\nfunction StyledButton({ children }) {\n  const styles = useStyles()\n  return (\n    <Button className={styles.root} >\n      { children}\n    </Button>\n  )\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar style={{height:50}} >\n        <Toolbar>\n          <IconButton>\n            <MenuIcon/>\n          </IconButton>\n          <Typography>\n            TITLE\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth='lg'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Typography variant='h2' component='div'>\n              HELLO\n            </Typography>\n            <StyledButton>\n              HELLO\n            </StyledButton>\n            \n            <Grid container spacing={2} justify='center'>\n              <Grid item xs={3} sm={10}>\n                <Paper style={{height:100, width:'100%'}} />\n              </Grid>\n              <Grid item xs={3} sm={5}>\n                <Paper style={{height:100, width:'100%'}} />\n              </Grid>\n              <Grid item xs={3} sm={5}>\n                <Paper style={{height:100, width:'100%'}} />\n              </Grid>\n            </Grid>\n\n            <TextField\n              variant='outlined'\n              // variant='filled'\n              color='secondary'\n              type='email'\n              // type='time'\n              // type='date'\n              label='Set time'\n              // value='test@test.test'\n              placeholder='test@test.test'\n            />\n            <CheckboxExample />\n            <ButtonGroup>\n              <Button\n                startIcon={<SaveIcon />}\n                // endIcon={<SaveIcon/>}\n                size='large'\n                // disabled\n                style={{\n                  fontSize: 28\n                }}\n                variant='contained'\n                color='primary'\n              >\n                Save\n        </Button>\n              <Button\n                startIcon={<DeleteIcon />}\n                // endIcon={<SaveIcon/>}\n                size='large'\n                // disabled\n                style={{\n                  fontSize: 28\n                }}\n                variant='contained'\n                color='secondary'\n              >\n                Delete\n        </Button>\n            </ButtonGroup>\n\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}